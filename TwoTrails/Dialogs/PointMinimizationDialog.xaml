<Window x:Class="TwoTrails.Dialogs.PointMinimizationDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tt="clr-namespace:TwoTrails"
        xmlns:fmsccm="clr-namespace:FMSC.Core.Windows.ComponentModel;assembly=FMSC.Core.Windows"
        xmlns:sys="clr-namespace:System;assembly=mscorlib"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Point Minimization Tool"
        Height="600" MinHeight="300"
        Width="950" MinWidth="600">
    
    <Window.Resources>
        <fmsccm:EnumDescriptionConverter x:Key="edc"/>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
                <RowDefinition Height="Auto" />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>

                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="5, 2.5, 0, 2.5"/>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="5, 2.5, 0, 2.5"/>
                </Style>

                <Style TargetType="CheckBox">
                    <Setter Property="Margin" Value="4, 2.5, 0, 2.5"/>
                </Style>
            </Grid.Resources>
            
            <Grid Margin="5" Grid.Column="0" Grid.Row="0">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Polygon" Grid.Column="0" Grid.Row="0"/>
                <ComboBox Grid.Column="1" Grid.Row="0" MinWidth="125" HorizontalAlignment="Right"
                          ItemsSource="{Binding Polygons, Mode=OneWay}"
                          SelectedItem="{Binding TargetPolygon, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding TargetPolygonToolTip}"/>


                <TextBlock Text="Analyze All Points" Grid.Column="0" Grid.Row="1"/>
                <CheckBox Grid.Column="1" Grid.Row="1" IsChecked="{Binding AnalyzeAllPointsInPoly}"
                          ToolTip="Run minimization on all points instead of the current on boundary points"/>
                
                <TextBlock Text="Respect Curves" Grid.Column="0" Grid.Row="2"/>
                <CheckBox Grid.Column="1" Grid.Row="2" IsChecked="{Binding RunPartial}"
                          ToolTip="Do not try and minimize points on continuous curves of the boundary"/>

                <TextBlock Text="Minimum Angle" Grid.Column="0" Grid.Row="3"/>
                <TextBox Grid.Column="1" Grid.Row="3" Text="{Binding MinimumAngle, Mode=TwoWay, Delay=250, UpdateSourceTrigger=PropertyChanged}"
                         GotFocus="TextBox_GotFocus" PreviewTextInput="TextIsUnsignedDouble"
                          ToolTip="Minimum angle to adjust for (45&#176; is recommended)"/>

                <TextBlock Text="Minimum Distance" Grid.Column="0" Grid.Row="4"/>
                <TextBox Grid.Column="1" Grid.Row="4" Text="{Binding MinimumLegLength, Mode=TwoWay, Delay=250, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static sys:String.Empty}}"
                         GotFocus="TextBox_GotFocus" PreviewTextInput="TextIsUnsignedDouble"
                         ToolTip="Override the minimum distance between points (in meters)" />

                <TextBlock Text="Accuracy Override" Grid.Column="0" Grid.Row="5"/>
                <TextBox Grid.Column="1" Grid.Row="5" Text="{Binding AccuracyOverride, Mode=TwoWay, Delay=250, UpdateSourceTrigger=PropertyChanged, TargetNullValue={x:Static sys:String.Empty}}"
                         GotFocus="TextBox_GotFocus" PreviewTextInput="TextIsUnsignedDouble"
                          ToolTip="Override the accuracy of the points" />

            </Grid>

            <Grid Grid.Column="0" Grid.Row="2">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Margin" Value="5, 2.5, 0, 2.5"/>
                    </Style>
                </Grid.Resources>
                
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Grid.Column="2" Grid.Row="0" Text="Current" Padding="0 0 20 0"/>
                <TextBlock Grid.Column="3" Grid.Row="0" Text="Minimized" Padding="0 0 5 0"/>

                <TextBlock Grid.Column="0" Grid.Row="1" Text="Area (Ac)"/>
                <TextBlock Grid.Column="0" Grid.Row="2" Text="Area (Ha)"/>

                <TextBlock Grid.Column="0" Grid.Row="3" Text="Perimeter (M)"/>
                <TextBlock Grid.Column="0" Grid.Row="4" Text="Perimeter (Ft)"/>

                <TextBlock Grid.Column="0" Grid.Row="5" Text="GPS Area-Err"/>
                <TextBlock Grid.Column="0" Grid.Row="6" Text="Geometric ER"/>


                <TextBlock Grid.Column="2" Grid.Row="1" Text="{Binding TargetPolygon.AreaAcres, StringFormat=F3, TargetNullValue=''}"/>
                <TextBlock Grid.Column="3" Grid.Row="1" Text="{Binding NewAreaAc, StringFormat=F3, TargetNullValue=''}"/>

                <TextBlock Grid.Column="2" Grid.Row="2" Text="{Binding TargetPolygon.AreaHectaAcres, StringFormat=F3, TargetNullValue=''}"/>
                <TextBlock Grid.Column="3" Grid.Row="2" Text="{Binding NewAreaHa, StringFormat=F3, TargetNullValue=''}"/>

                <TextBlock Grid.Column="2" Grid.Row="3" Text="{Binding TargetPolygon.Perimeter, StringFormat=F2, TargetNullValue=''}"/>
                <TextBlock Grid.Column="3" Grid.Row="3" Text="{Binding NewPerimeterM, StringFormat=F2, TargetNullValue=''}"/>

                <TextBlock Grid.Column="2" Grid.Row="4" Text="{Binding TargetPolygon.PerimeterFt, StringFormat=F2, TargetNullValue=''}"/>
                <TextBlock Grid.Column="3" Grid.Row="4" Text="{Binding NewPerimeterFt, StringFormat=F2, TargetNullValue=''}"/>
            </Grid>

            <ListBox x:Name="lbPoints" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                     MinWidth="75" Margin="0 0 0 -1"
                     ItemsSource="{Binding Points, Mode=OneWay}" SelectionMode="Multiple">
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="_Border" SnapsToDevicePixels="true">
                                        <Border.Style>
                                            <Style>
                                                <Style.Triggers>
                                                    <DataTrigger Binding="{Binding Path=OnBoundary, Mode=OneWay, UpdateSourceTrigger=PropertyChanged}" Value="True">
                                                        <Setter Property="Border.Background" Value="{StaticResource scbPrimaryLighter}"/>
                                                        <Setter Property="Border.BorderBrush" Value="{StaticResource scbPrimaryLight}"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <ContentPresenter />
                                    </Border>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Border BorderThickness="0 0 0 1" BorderBrush="#A0A0A0">
                            <Grid Margin="4 0 4 2">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="Auto"/>
                                    <RowDefinition Height="Auto"/>
                                </Grid.RowDefinitions>
                                <i:Interaction.Triggers>
                                    <i:EventTrigger EventName="MouseLeftButtonDown">
                                        <fmsccm:AdvancedInvokeCommandAction
                                            Command="{Binding DataContext.PointSelectedCommand, RelativeSource={RelativeSource AncestorType=ListBox}}"
                                            CommandParameter="{Binding}"
                                            PassEventArgsToCommand="True"/>
                                    </i:EventTrigger>
                                </i:Interaction.Triggers>

                                <TextBlock Grid.Row="0" Text="{Binding PID}" FontSize="18" FontWeight="Medium" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Text="{Binding OpType,StringFormat=({0})}" FontSize="10" HorizontalAlignment="Center"/>
                            </Grid>
                        </Border>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <ContentControl x:Name="map" Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" Content="{Binding Map}" />

            <CheckBox Grid.Column="2" Grid.Row="0" Margin="5" IsChecked="{Binding HidePoints}"
                      Content="Hide Points" Foreground="White"
                      HorizontalAlignment="Left" VerticalAlignment="Top"/>
        </Grid>

        <Grid Grid.Row="1">
            <Border BorderBrush="Gray" BorderThickness="0, 2, 0, 0">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Width="75" Content="Cancel" Click="Cancel_Click" Margin="3 0 0 0"/>
                    <Button Grid.Column="2" Width="75" Content="Analyze" Click="Analyze_Click"/>
                    <Button Grid.Column="4" Width="75" Content="Apply" Click="Apply_Click" Margin="0 0 3 0"/>
                </Grid>
            </Border>
        </Grid>

    </Grid>
</Window>
