<Window x:Class="TwoTrails.Dialogs.PointMinimizationDialog"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:tt="clr-namespace:TwoTrails"
        xmlns:fmsccm="clr-namespace:FMSC.Core.Windows.ComponentModel;assembly=FMSC.Core.Windows"
        xmlns:map="clr-namespace:Microsoft.Maps.MapControl.WPF;assembly=Microsoft.Maps.MapControl.WPF"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStartupLocation="CenterScreen"
        Title="Geometric Error Reduction"
        Height="400" MinHeight="300"
        Width="800" MinWidth="600">
    
    <Window.Resources>
        <fmsccm:EnumDescriptionConverter x:Key="edc"/>

        <Style TargetType="RadioButton">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="ComboBox">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
        <Style TargetType="CheckBox">
            <Setter Property="Margin" Value="1"/>
            <Setter Property="VerticalAlignment" Value="Center"/>
        </Style>
    </Window.Resources>
    
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <Grid Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.RowDefinitions>
                <RowDefinition Height="Auto" />
                <RowDefinition Height="Auto" />
                <RowDefinition Height="*" />
            </Grid.RowDefinitions>

            <Grid.Resources>
                <Style TargetType="TextBlock">
                    <Setter Property="VerticalAlignment" Value="Center"/>
                </Style>

                <Style TargetType="ComboBox">
                    <Setter Property="Margin" Value="5, 2.5, 0, 2.5"/>
                </Style>

                <Style TargetType="TextBox">
                    <Setter Property="Margin" Value="5, 2.5, 0, 2.5"/>
                </Style>
            </Grid.Resources>
            
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <TextBlock Text="Polygon" Grid.Column="0" Grid.Row="0"/>
                <ComboBox Grid.Column="1" Grid.Row="0" MinWidth="125" HorizontalAlignment="Right"
                          ItemsSource="{Binding Polygons, Mode=OneWay}"
                          SelectedItem="{Binding TargetPolygon, UpdateSourceTrigger=PropertyChanged}" ToolTip="{Binding TargetPolygonToolTip}"/>

                <TextBlock Text="Minimum Angle" Grid.Column="0" Grid.Row="1"/>
                <TextBox Grid.Column="1" Grid.Row="1" Text="{Binding MinimumAngle}"
                         GotFocus="TextBox_GotFocus" PreviewTextInput="TextIsUnsignedInteger"/>

                <TextBlock Text="Minimum Distance" Grid.Column="0" Grid.Row="2"/>
                <TextBox Grid.Column="1" Grid.Row="2" Text="{Binding MinimumAngle}"
                         GotFocus="TextBox_GotFocus" PreviewTextInput="TextIsUnsignedInteger" />

            </Grid>

            <ListBox x:Name="lbPoints" Grid.Column="1" Grid.Row="0" Grid.RowSpan="3"
                     MinWidth="120"
                     ItemsSource="{Binding Points, Mode=OneWay}" SelectionMode="Multiple">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <fmsccm:AdvancedInvokeCommandAction
                            Command="{Binding PointSelectionChangedCommand}"
                            CommandParameter="{Binding ElementName=lbPoints, Path=SelectedItems}"
                            PassEventArgsToCommand="True"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
                <ListBox.ItemContainerStyle>
                    <Style TargetType="{x:Type ListBoxItem}">
                        <Setter Property="Template">
                            <Setter.Value>
                                <ControlTemplate TargetType="ListBoxItem">
                                    <Border Name="_Border" SnapsToDevicePixels="true">
                                        <ContentPresenter />
                                    </Border>
                                    <ControlTemplate.Triggers>
                                        <Trigger Property="IsSelected" Value="true">
                                            <Setter TargetName="_Border" Property="Background" Value="{StaticResource scbPrimaryLighter}"/>
                                            <Setter TargetName="_Border" Property="BorderBrush" Value="{StaticResource scbPrimaryLight}"/>
                                        </Trigger>
                                    </ControlTemplate.Triggers>
                                </ControlTemplate>
                            </Setter.Value>
                        </Setter>
                    </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid>
                            <!--<Grid.Style>
                                <Style>
                                    <Setter Property="Grid.Background" Value="White"/>
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding Path=IsSelected, RelativeSource={
                                                RelativeSource Mode=FindAncestor, AncestorType={x:Type ListBoxItem}}}"
                                                Value="True">
                                                <Setter Property="Grid.Background" Value="Red"/>
                                            </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Grid.Style>-->
                            
                            <Grid.RowDefinitions>
                                <RowDefinition Height="Auto"/>
                                <RowDefinition Height="Auto"/>
                            </Grid.RowDefinitions>

                            <TextBlock Grid.Row="0" Text="{Binding PID}" FontSize="18"/>
                            <TextBlock Grid.Row="1" Text="{Binding OpType}"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>

            <map:Map Grid.Column="2" Grid.Row="0" Grid.RowSpan="3" x:Name="map" Mode="Aerial"/>

        </Grid>

        <Grid Grid.Row="1" Margin="3 5 3 0">
            <Border BorderBrush="Gray" BorderThickness="0, 1, 0, 0">
                <Grid Margin="2">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="5"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <Button Grid.Column="0" Width="75" Content="Cancel" Click="Cancel_Click"/>
                    <Button Grid.Column="2" Width="75" Content="Analyze" Click="Analyze_Click"/>
                    <Button Grid.Column="4" Width="75" Content="Apply" Click="Apply_Click"/>
                </Grid>
            </Border>
        </Grid>

    </Grid>
</Window>
