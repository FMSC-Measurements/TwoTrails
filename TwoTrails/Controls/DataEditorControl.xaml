<UserControl x:Class="TwoTrails.Controls.DataEditorControl"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:TwoTrails"
             xmlns:scm="clr-namespace:System.ComponentModel;assembly=WindowsBase"
             xmlns:ctrls="clr-namespace:TwoTrails.Controls"
             xmlns:cvt="clr-namespace:TwoTrails.Converters"
             xmlns:cp="clr-namespace:TwoTrails.CustomProperties"
             xmlns:cc="clr-namespace:FMSC.Core.Controls;assembly=FMSC.Core"
             mc:Ignorable="d" 
             FocusManager.FocusedElement="{Binding ElementName=dgPoints}"
             d:DesignHeight="600" d:DesignWidth="800">

    <UserControl.Resources>
        <cvt:MetadataValueConverter x:Key="mdvcElev" MetadataPropertyName="Elevation"/>
        <cvt:MetadataValueConverter x:Key="mdvcSlpDist" MetadataPropertyName="Distance"/>
        <cvt:MetadataValueConverter x:Key="mdvcSlpAng" MetadataPropertyName="SlopeAngle"/>
        <cvt:NullableDoubleConverter x:Key="ndblcvtr" />

        <Style x:Key="styleFieldTitle" TargetType="TextBlock">
            <Setter Property="Margin" Value="0,0,5,0" />
            <Setter Property="VerticalAlignment" Value="Center"/>
            <Setter Property="HorizontalAlignment" Value="Right"/>
            <Setter Property="Foreground" Value="Black"/>
        </Style>

        <Style x:Key="styleFieldValue" TargetType="Control">
            <Setter Property="Margin" Value="0,2.5,0,2.5" />
            <Setter Property="Height" Value="25"/>
            <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />
            <Setter Property="VerticalContentAlignment" Value="Center"/>

            <Style.Triggers>
                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="True"/>
                        <Condition Property="cp:ControlProperties.BackgroundEnabled" Value="True"/>
                    </MultiTrigger.Conditions>

                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="LightGreen"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                        <Condition Property="cp:ControlProperties.BackgroundEnabled" Value="True"/>
                    </MultiTrigger.Conditions>

                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="PaleGreen"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>

                <MultiTrigger>
                    <MultiTrigger.Conditions>
                        <Condition Property="IsEnabled" Value="False"/>
                        <Condition Property="cp:ControlProperties.BackgroundEnabled" Value="False"/>
                    </MultiTrigger.Conditions>

                    <MultiTrigger.Setters>
                        <Setter Property="Background" Value="LightGray"/>
                    </MultiTrigger.Setters>
                </MultiTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style x:Key="styleTextButtonValue" TargetType="Button" BasedOn="{StaticResource styleFieldValue}">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="{x:Type Button}">
                        <Grid Background="{TemplateBinding Background}">
                            <ContentPresenter x:Name="MyContentPresenter" 
                                          Content="{TemplateBinding Content}"
                                          HorizontalAlignment="Center" 
                                          VerticalAlignment="Center" />
                        </Grid>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>-->

        <Style x:Key="styleXYZEnable" TargetType="Control" BasedOn="{StaticResource ResourceKey=styleFieldValue}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding OnlyGpsTypes}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="styleManAccEnable" TargetType="Control" BasedOn="{StaticResource ResourceKey=styleFieldValue}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding OnlyManAccTypes}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <Style x:Key="styleTravEnable" TargetType="Control" BasedOn="{StaticResource ResourceKey=styleFieldValue}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding OnlyTravTypes}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>

        <!--<Style x:Key="styleQndmEnable" TargetType="Button" BasedOn="{StaticResource ResourceKey=styleTextButtonValue}">
            <Setter Property="IsEnabled" Value="False" />
            <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />

            <Style.Triggers>
                <DataTrigger Binding="{Binding OnlyQuondams}" Value="True">
                    <Setter Property="IsEnabled" Value="True" />
                </DataTrigger>
            </Style.Triggers>
        </Style>-->
    </UserControl.Resources>

    <UserControl.InputBindings>
        <KeyBinding Command="{Binding SelectAlternateCommand}" Key="A" Modifiers="Ctrl+Alt" />
        <KeyBinding Command="{Binding SelectGpsCommand}" Key="G" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SelectTravCommand}" Key="T" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding SelectInverseCommand}" Key="I" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding DeselectCommand}" Key="D" Modifiers="Ctrl"/>
        <KeyBinding Command="{Binding ReverseSelectedCommand}" Key="R" Modifiers="Ctrl+Alt"/>
    </UserControl.InputBindings>


    <Grid Margin="0" Background="White">
        <Grid.RowDefinitions>
            <RowDefinition Height="150" MinHeight="100" MaxHeight="300"/>
            <RowDefinition Height="3" MinHeight="3" MaxHeight="3"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        
        <cvt:BindingReflector Target="{Binding  Mode=OneWayToSource, Source = {StaticResource mdvcElev}, Path=Metadata}"
            Source="{Binding Path=Metadata, Mode=OneWay}" />
        <cvt:BindingReflector Target="{Binding  Mode=OneWayToSource, Source = {StaticResource mdvcSlpDist}, Path=Metadata}"
            Source="{Binding Path=Metadata, Mode=OneWay}" />
        <cvt:BindingReflector Target="{Binding  Mode=OneWayToSource, Source = {StaticResource mdvcSlpAng}, Path=Metadata}"
            Source="{Binding Path=Metadata, Mode=OneWay}" />

        <ScrollViewer HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Disabled">
            <Grid Grid.Row="0" Background="{DynamicResource {x:Static SystemColors.ControlBrushKey}}" HorizontalAlignment="Stretch">
                <Grid.Resources>
                    <Style TargetType="TextBlock">
                        <Setter Property="Foreground" Value="Black"/>
                    </Style>
                </Grid.Resources>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="200" MinWidth="100" MaxWidth="250"/>
                    <ColumnDefinition Width="125"/>
                    <ColumnDefinition Width="170" MinWidth="100" MaxWidth="250"/>
                    <ColumnDefinition Width="150" MinWidth="100" MaxWidth="250"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>

                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>


                <TextBlock Text="Polygons" Grid.Column="0" Grid.Row="0" TextAlignment="Center"/>

                <ListBox Grid.Column="0" Grid.Row="1" ItemsSource="{Binding Polygons}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Viewbox Margin="-1">
                                <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Item.Name}"/>
                            </Viewbox>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>


                <TextBlock Text="OpTypes" Grid.Column="1" Grid.Row="0" TextAlignment="Center"/>

                <ListBox Grid.Column="1" Grid.Row="1" ItemsSource="{Binding OpTypes}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Item}" Margin="2"/>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>


                <TextBlock Text="Groups" Grid.Column="2" Grid.Row="0" TextAlignment="Center"/>

                <ListBox Grid.Column="2" Grid.Row="1" ItemsSource="{Binding Groups}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Item.Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>


                <TextBlock Text="Metadata" Grid.Column="3" Grid.Row="0" TextAlignment="Center"/>

                <ListBox Grid.Column="3" Grid.Row="1" ItemsSource="{Binding Metadatas}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <CheckBox IsChecked="{Binding IsChecked}" Content="{Binding Path=Item.Name}" />
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>

                <Grid Grid.Column="4" Grid.Row="1" Grid.ColumnSpan="1" Grid.RowSpan="2" Margin="5, 0, 5, 0">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <CheckBox Content="On Boundary" Grid.Row="0" IsThreeState="True" IsChecked="{Binding IsOnBnd}" Command="{Binding RefreshPoints}" />
                    <CheckBox Content="Has Links" Grid.Row="1" IsThreeState="True" IsChecked="{Binding HasLinks}" Command="{Binding RefreshPoints}" />
                </Grid>
            </Grid>
        </ScrollViewer>
        <GridSplitter Grid.Row="1" Background="Gray" Height="3" HorizontalAlignment="Stretch"/>

        <Grid Grid.Row="2">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*" MinWidth="150"/>
                <ColumnDefinition Width="3"/>
                <ColumnDefinition Width="185" MinWidth="150" MaxWidth="300"/>
            </Grid.ColumnDefinitions>

            <cc:DataGridEx x:Name="dgPoints"
                Grid.Column="0"
                BorderThickness="0"
                ItemsSource="{Binding Points}"
                AutoGenerateColumns="False"
                CanUserReorderColumns="True" CanUserResizeColumns="True" 
                CanUserResizeRows="False" CanUserSortColumns="False"
                CanUserDeleteRows="False" CanUserAddRows="False"
                LoadingRow="DataGrid_OnLoadingRow"
                EnableRowVirtualization="True"
                EnableColumnVirtualization="True"
                VirtualizingStackPanel.IsVirtualizing="True"
                VirtualizingStackPanel.VirtualizationMode="Recycling"
                SelectionMode="Extended"
                SelectionUnit="FullRow"
                IsReadOnly="True"
                VisibleItemsList="{Binding VisiblePoints, Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                SelectedItemsList="{Binding SelectedPoints, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}">

                <DataGrid.InputBindings>
                    <KeyBinding Command="{Binding DeleteCommand}" Key="Delete"/>
                </DataGrid.InputBindings>
                
                <DataGrid.Resources>
                    <SolidColorBrush x:Key="{x:Static SystemColors.HighlightBrushKey}" Color="DodgerBlue"/>
                    <SolidColorBrush x:Key="{x:Static SystemColors.InactiveSelectionHighlightBrushKey}" Color="LightBlue"/>
                </DataGrid.Resources>
                
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Index" IsReadOnly="True" Binding="{Binding Index}"/>
                    <DataGridTextColumn Header="PID" IsReadOnly="True" Binding="{Binding PID}"/>
                    <DataGridTextColumn Header="OpType" IsReadOnly="True" Binding="{Binding OpType}"/>
                    <DataGridTextColumn Header="Polygon" IsReadOnly="True" Binding="{Binding Polygon.Name}" Width="100"/>
                    <DataGridTextColumn Header="OnBound" IsReadOnly="True" Binding="{Binding OnBoundary}"/>
                    <DataGridTextColumn Header="AdjX" IsReadOnly="True" Binding="{Binding AdjX}"/>
                    <DataGridTextColumn Header="AdjY" IsReadOnly="True" Binding="{Binding AdjY}"/>
                    <DataGridTextColumn Header="AdjZ (M)" IsReadOnly="True" Binding="{Binding AdjZ}"/>
                    <DataGridTextColumn Header="Acc (M)" IsReadOnly="True" Binding="{Binding Accuracy}"/>
                    <DataGridTextColumn Header="UnAdjX" IsReadOnly="True" Binding="{Binding UnAdjX}" Visibility="Collapsed"/>
                    <DataGridTextColumn Header="UnAdjY" IsReadOnly="True" Binding="{Binding UnAdjY}" Visibility="Collapsed"/>
                    <DataGridTextColumn Header="UnAdjZ (M)" IsReadOnly="True" Binding="{Binding UnAdjZ}" Visibility="Collapsed"/>
                    <DataGridTextColumn Header="QndmLink" IsReadOnly="True" Binding="{Binding HasQuondamLinks}"/>
                    <DataGridTextColumn Header="Comment" IsReadOnly="True" Binding="{Binding Comment}" Visibility="Collapsed"/>
                </DataGrid.Columns>

                <DataGrid.ContextMenu>
                    <ContextMenu>
                        <MenuItem Header="Copy Cell Value" Command="{Binding CopyCellValueCommand}"
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget}" />
                        <MenuItem Header="Export Point Values" Command="{Binding ExportValuesCommand}" 
                                  CommandParameter="{Binding RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type ContextMenu}}, Path=PlacementTarget}"/>
                        
                        <Separator/>

                        <MenuItem Header="Rename" Command="{Binding RenamePointsCommand}" />

                        <Separator/>

                        <MenuItem Header="Move" Command="{Binding MovePointsCommand}" />
                        <MenuItem Header="Quondam" Command="{Binding CreateQuondamsCommand}" />

                        <Separator/>

                        <MenuItem Header="Reset" Command="{Binding ResetPointCommand}" />

                        <Separator/>

                        <MenuItem Header="Delete" Command="{Binding DeleteCommand}"/>
                    </ContextMenu>
                </DataGrid.ContextMenu>
            </cc:DataGridEx>

            <GridSplitter Grid.Column="1" Width="3" HorizontalAlignment="Stretch" Background="Gray" />

            <ScrollViewer Grid.Column="2" VerticalScrollBarVisibility="Auto">
                <Grid Margin="5">

                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>

                    <Grid.RowDefinitions>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>

                    <TextBlock Grid.Row="0" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="PID"/>
                    <TextBox Grid.Row="0" Grid.Column="1"
                                Text="{Binding PID, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                cp:ControlProperties.BackgroundEnabled="{Binding SamePID, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource styleFieldValue}">
                                <Setter Property="IsEnabled" Value="False" />
                                <Setter Property="cp:ControlProperties.BackgroundEnabled" Value="False" />

                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding MultipleSelections}" Value="True">
                                        <Setter Property="IsEnabled" Value="False" />
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding HasSelection}" Value="True"/>
                                            <Condition Binding="{Binding MultipleSelections}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>

                    <TextBlock Grid.Row="1" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Polygon"/>
                    <ComboBox Grid.Row="1" Grid.Column="1" Style="{StaticResource ResourceKey=styleFieldValue}"
                                cp:ControlProperties.BackgroundEnabled="{Binding SamePolygon, Converter={StaticResource IBC}}"
                                ItemsSource="{Binding Manager.Polygons, Mode=OneWay}"
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding Polygon}">
                        <ComboBox.IsEnabled>
                            <MultiBinding Converter="{StaticResource NullOrBool}">
                                <Binding Path="SamePolygon"/>
                                <Binding Path="HasSelection"/>
                            </MultiBinding>
                        </ComboBox.IsEnabled>
                    </ComboBox>

                    <TextBlock Grid.Row="2" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Index"/>
                    <TextBox Grid.Row="2" Grid.Column="1"
                             Text="{Binding Index, Delay=250, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameIndex, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding">
                        <TextBox.Resources>
                            <Style TargetType="{x:Type TextBox}" BasedOn="{StaticResource ResourceKey=styleFieldValue}">
                                <Style.Triggers>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding MultipleSelections}" Value="False"/>
                                            <Condition Binding="{Binding Project.Settings.IsAdvancedMode}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <MultiDataTrigger.Setters>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger.Setters>
                                    </MultiDataTrigger>
                                    <DataTrigger Binding="{Binding MultipleSelections}" Value="True">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding Project.Settings.IsAdvancedMode}" Value="False">
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </TextBox.Resources>
                    </TextBox>

                    <TextBlock Grid.Row="3" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Metadata"/>
                    <ComboBox Grid.Row="3" Grid.Column="1" Style="{StaticResource ResourceKey=styleFieldValue}"
                                cp:ControlProperties.BackgroundEnabled="{Binding SameMetadata, Converter={StaticResource IBC}}"
                                ItemsSource="{Binding Manager.Metadata, Mode=OneWay}"
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding Metadata}"
                                IsEnabled="{Binding HasSelection}"/>

                    <TextBlock Grid.Row="4" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Group"/>
                    <ComboBox Grid.Row="4" Grid.Column="1" Style="{StaticResource ResourceKey=styleFieldValue}"
                                cp:ControlProperties.BackgroundEnabled="{Binding SameGroup, Converter={StaticResource IBC}}"
                                ItemsSource="{Binding Manager.Groups, Mode=OneWay}"
                                DisplayMemberPath="Name"
                                SelectedItem="{Binding Group}"
                                IsEnabled="{Binding HasSelection}"/>

                    <CheckBox Grid.Row="5" Grid.Column="1" Content="OnBound"
                              Style="{StaticResource ResourceKey=styleFieldValue}"
                              cp:ControlProperties.BackgroundEnabled="{Binding SameOnBound, Converter={StaticResource IBC}}"
                              IsChecked="{Binding OnBoundary}"
                              IsEnabled="{Binding HasSelection}"/>

                    <TextBlock Grid.Row="6" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="UnAdjX"/>
                    <TextBox Grid.Row="6" Grid.Column="1" Style="{StaticResource ResourceKey=styleXYZEnable}"
                             Name="txtUnAdjX"
                             Text="{Binding UnAdjX, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameUnAdjX, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="7" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="UnAdjY"/>
                    <TextBox Grid.Row="7" Grid.Column="1" Style="{StaticResource ResourceKey=styleXYZEnable}"
                             Text="{Binding UnAdjY, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Delay=500}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameUnAdjY, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="8" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="UnAdjZ"/>
                    <TextBox Grid.Row="8" Grid.Column="1" Style="{StaticResource ResourceKey=styleXYZEnable}"
                             Text="{Binding UnAdjZ, Converter={StaticResource mdvcElev}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameUnAdjZ, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="9" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Man Acc"/>
                    <TextBox Grid.Row="9" Grid.Column="1" Style="{StaticResource ResourceKey=styleManAccEnable}"
                             Text="{Binding ManAcc, Converter={StaticResource ndblcvtr}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameManAcc, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="10" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Fwd Az"/>
                    <TextBox Grid.Row="10" Grid.Column="1" Style="{StaticResource ResourceKey=styleTravEnable}"
                             Text="{Binding FwdAz, Converter={StaticResource ndblcvtr}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameFwdAz, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="11" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Back Az"/>
                    <TextBox Grid.Row="11" Grid.Column="1" Style="{StaticResource ResourceKey=styleTravEnable}"
                             Text="{Binding BkAz, Converter={StaticResource ndblcvtr}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameBkAz, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="12" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Slp Dist"/>
                    <TextBox Grid.Row="12" Grid.Column="1" Style="{StaticResource ResourceKey=styleTravEnable}"
                             Text="{Binding SlpDist, Converter={StaticResource mdvcSlpDist}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameSlpDist, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="13" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Slp Ang"/>
                    <TextBox Grid.Row="13" Grid.Column="1" Style="{StaticResource ResourceKey=styleTravEnable}"
                             Text="{Binding SlpAng, Converter={StaticResource mdvcSlpAng}, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameSlpAng, Converter={StaticResource IBC}}"
                             LostFocus="TextBox_UpdateBinding"/>

                    <TextBlock Grid.Row="14" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" Text="Qndm Link"/>
                    <Button Grid.Row="14" Grid.Column="1" Margin="0, 2.5, 0, 2.5" VerticalContentAlignment="Center"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameParentPoint, Converter={StaticResource IBC}}"
                            Height="25"
                            Content="{Binding ParentPoint.PID}"
                            Command="{Binding ChangeQuondamParentCommand}"/>

                    <TextBlock Grid.Row="15" Grid.Column="0" Style="{StaticResource ResourceKey=styleFieldTitle}" VerticalAlignment="Top" Margin="0,2.5,5,0" Text="Comment"/>
                    <TextBox Grid.Row="15" Grid.Column="1" Style="{StaticResource ResourceKey=styleFieldValue}"
                             TextWrapping="Wrap" VerticalAlignment="Top"
                             Text="{Binding Comment, Delay=500, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                             cp:ControlProperties.BackgroundEnabled="{Binding SameComment, Converter={StaticResource IBC}}"
                             MinHeight="75"
                             Height="Auto"
                             VerticalContentAlignment="Top"
                             LostFocus="TextBox_UpdateBinding"
                             IsEnabled="{Binding HasSelection}"/>
                </Grid>
            </ScrollViewer>
        </Grid>
    </Grid>
</UserControl>
